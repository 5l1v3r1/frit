#!/usr/bin/python
import sys
import datetime
import os.path
import configobj
import fritutils.termout
import fritcommands.init
import fritcommands.mount
import fritcommands.status
import fritcommands.store
import fritcommands.extensions
import fritcommands.undelete
import fritcommands.add
import fritcommands.getmails
import fritcommands.hashes
import fritcommands.logs
import fritutils.fritlog
from fritutils import fritobjects

logger = fritutils.fritlog.loggers['mainfritLog']

def startLog(command):
    logger.info('Starting %s command' % command)
    
def stopLog(command,startTime):
    diffTime = datetime.datetime.today() - startTime
    logger.info('%s command successfully ended in %s' % (command,diffTime))

def mainFrit():
    logger.info('Frit starting')
    startTime = datetime.datetime.today()
    verbose = False
    # Check to see if a command was given.
    if len(sys.argv) < 2:
        fritutils.termout.printWarning('No command was given')
        sys.exit(1)
    # check to see if the current working dir is allowed
    fritutils.noBadPath()
    # Separate command and the command arguemnts
    (command,args) = fritutils.getCommand(sys.argv[1:])
    # here we get the options from the args
    # we have to work on this :-)
    if args:
        if '-v' in args:
            args.remove('-v')
            verbose = True
        if '--debug' in args:
            args.remove('--debug')
            fritutils.fritlog.setLevels('DEBUG')
    # If the command is init, just do it
    if command == 'init':
        # check to see if .frit already exists
        if not fritutils.isCwdFrit():
            fritcommands.init.initCommand()
            sys.exit(0)
        else:
            fritutils.termout.printWarning("A .frit directory already exists.")
            sys.exit(1)
    
    # The command is not init, so we should find a config file
    if os.path.exists('.frit/config'):
        try:
            fritConfig = configobj.ConfigObj('.frit/config', indent_type='    ' )
        except configobj.ParseError,e:
            fritutils.termout.printWarning('The config file contains error: %s' % e)
            sys.exit(1)
        except configobj.ConfigObjError:
            fritutils.termout.printWarning('The config file contains errors.')
            sys.exit(1)
    else:
        fritutils.termout.printWarning('No ".frit/config" found. Run "frit init" first."')
        sys.exit(1)
    # Here we try to map evidences from config file to Evidence objects
    Evidences = fritobjects.evidencesFromConfig(fritConfig, verbose=verbose)
    # Here we check if one ore more evidence names or evidence file names are
    # passed as an arguemnt, which means that the user only wants to work on
    # them
    if args:
        specifiedEvidences = []
        for evi in Evidences:
            if evi.configName in args:
                args.remove(evi.configName)
                specifiedEvidences.append(evi)
            elif evi.fileName in args:
                args.remove(evi.fileName)
                specifiedEvidences.append(evi)
        if len(specifiedEvidences) > 0:
            Evidences = specifiedEvidences
        
    # user isued a mount command
    startLog(command)
    if command == 'mount':
        fritcommands.mount.mountCommand(Evidences,args)
        stopLog(command,startTime)
        sys.exit(0)

    if command == 'umount':
        fritcommands.mount.Umount(Evidences)
        stopLog(command,startTime)
        sys.exit(0)
        
    if command == 'status':
        fritcommands.status.status(Evidences,args)
        stopLog(command,startTime)
        sys.exit(0)
    
    if command == 'store':
        fritcommands.store.store(Evidences,args)
        stopLog(command,startTime)
        sys.exit(0)
    
    if command == 'extensions':
        fritcommands.extensions.factory(Evidences,args)
        stopLog(command,startTime)
        sys.exit(0)
        
    if command == 'undelete':
        fritcommands.undelete.factory(Evidences, args)
        stopLog(command,startTime)
        sys.exit(0)
        
    if command == 'add':
        fritcommands.add.factory(fritConfig, args)
        stopLog(command,startTime)
        sys.exit(0)
    
    if command == 'getmails':
        fritcommands.getmails.factory(Evidences, args)
        stopLog(command,startTime)
        sys.exit(0)
        
    if command == 'hashes':
        fritcommands.hashes.factory(Evidences, args)
        stopLog(command,startTime)
        sys.exit(0)
    
    if command == 'logs':
        fritcommands.logs.factory(Evidences, args)
        stopLog(command,startTime)
        sys.exit(0)
        
    # Obviously, the given command was not found
    fritutils.termout.printWarning('The "%s" command was not found.' % command)
if __name__ == '__main__':
    mainFrit()
